{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navigation-menu",
  "type": "registry:block",
  "title": "Navigation Menu",
  "files": [
    {
      "path": "src/components/navigation-menu/NavigationMenuChildLink.tsx",
      "content": "import { NavigationMenuLink } from '@radix-ui/react-navigation-menu';\nimport { isValidElement } from 'react';\n\nimport { withClassName } from '@/lib/compose-props';\nimport { cn } from '@/lib/utils';\n\nimport { navigationMenuVariants } from './navigation-menu';\nimport type { NavigationMenuChildLinkProps } from './types';\n\nconst NavigationMenuChildLink = (props: NavigationMenuChildLinkProps) => {\n  const { className, classNames, description, label, leading, size, trailing, ...rest } = props;\n\n  const { childLink, childLinkContent, childLinkDescription, childLinkIcon, childLinkLabel } = navigationMenuVariants({\n    size\n  });\n\n  const mergedCls = {\n    cls: cn(childLink(), className || classNames?.childLink),\n    content: cn(childLinkContent(), classNames?.childLinkContent),\n    description: cn(childLinkDescription(), classNames?.childLinkDescription),\n    icon: cn(childLinkIcon(), classNames?.childLinkIcon),\n    label: cn(childLinkLabel(), classNames?.childLinkLabel)\n  };\n\n  return (\n    <NavigationMenuLink {...rest}>\n      {isValidElement(leading) ? withClassName(leading, mergedCls.icon) : leading}\n\n      <div className={mergedCls.content}>\n        <div className={mergedCls.label}>{label}</div>\n\n        {description && <p className={mergedCls.description}>{description}</p>}\n      </div>\n\n      {trailing}\n    </NavigationMenuLink>\n  );\n};\n\nexport default NavigationMenuChildLink;\n",
      "type": "registry:ui",
      "target": "components/navigation-menu/NavigationMenuChildLink.tsx"
    },
    {
      "path": "src/components/navigation-menu/NavigationMenuChildList.tsx",
      "content": "import { cn } from '@/lib/utils';\n\nimport { navigationMenuVariants } from './navigation-menu';\nimport type { NavigationMenuChildListProps } from './types';\n\nexport const NavigationMenuChildList = (props: NavigationMenuChildListProps) => {\n  const { className, ...rest } = props;\n\n  const { childList } = navigationMenuVariants();\n\n  const mergedCls = cn(childList(), className);\n\n  return (\n    <ul\n      {...rest}\n      className={mergedCls}\n    />\n  );\n};\n",
      "type": "registry:ui",
      "target": "components/navigation-menu/NavigationMenuChildList.tsx"
    },
    {
      "path": "src/components/navigation-menu/NavigationMenuChildListItem.tsx",
      "content": "import { cn } from '@/lib/utils';\n\nimport { navigationMenuVariants } from './navigation-menu';\nimport type { NavigationMenuChildListItemProps } from './types';\n\nexport const NavigationMenuChildListItem = (props: NavigationMenuChildListItemProps) => {\n  const { className, ...rest } = props;\n\n  const { childListItem } = navigationMenuVariants();\n\n  const mergedCls = cn(childListItem(), className);\n\n  return (\n    <li\n      {...rest}\n      className={mergedCls}\n    />\n  );\n};\n",
      "type": "registry:ui",
      "target": "components/navigation-menu/NavigationMenuChildListItem.tsx"
    },
    {
      "path": "src/components/navigation-menu/navigation-menu.ts",
      "content": "import { tv } from 'tailwind-variants';\n\nexport const navigationMenuVariants = tv({\n  defaultVariants: {\n    size: 'md'\n  },\n  slots: {\n    arrow: 'relative top-[70%] rotate-45 border border-border bg-background rounded-[2px]',\n    childLink: [\n      `flex items-start select-none rounded-md leading-none no-underline outline-none transition-colors duration-200 cursor-pointer decoration-[none]`,\n      `focus:bg-accent focus:text-accent-foreground hover:bg-accent hover:text-accent-foreground`\n    ],\n    childLinkContent: `flex flex-col items-start`,\n    childLinkDescription: `line-clamp-2 text-muted-foreground leading-snug`,\n    childLinkIcon: 'shrink-0 text-muted-foreground',\n    childLinkLabel: `font-medium leading-none`,\n    childList: `grid grid-cols-[auto_auto] list-none my-0`,\n    childListItem: `list-none`,\n    content: [\n      `left-0 top-0 w-full md:(absolute w-auto)`,\n      `data-[motion^=from-]:animate-in data-[motion^=from-]:fade-in`,\n      `data-[motion^=to-]:animate-out data-[motion^=to-]:fade-out`,\n      `data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52`\n    ],\n    indicator: [\n      `absolute top-full z-2 flex mt-1px w-[--soybean-navigation-menu-indicator-size] items-end justify-center overflow-hidden transition-transform duration-200 ease-out translate-x-[--soybean-navigation-menu-indicator-position]`,\n      `data-[state=visible]:animate-in data-[state=visible]:fade-in-0`,\n      `data-[state=hidden]:animate-out data-[state=hidden]:fade-out-0`\n    ],\n    item: `list-none`,\n    itemIcon: 'shrink-0 text-muted-foreground',\n    link: [\n      `group relative w-full flex items-center rounded-md font-medium outline-none cursor-pointer decoration-[none]`,\n      `focus:bg-accent focus:text-accent-foreground`,\n      `hover:bg-accent hover:text-accent-foreground`,\n      `disabled:pointer-events-none disabled:opacity-50`\n    ],\n    linkIcon: 'shrink-0 self-start text-muted-foreground',\n    linkLabel: 'truncate',\n    list: `group flex flex-1 list-none items-center justify-center my-0`,\n    root: `relative z-2 w-full flex justify-center`,\n    trigger: [\n      `group inline-flex w-max items-center justify-center rounded-md bg-background font-medium transition-colors duration-200 decoration-none`,\n      `hover:bg-accent hover:text-accent-foreground`,\n      `focus:bg-accent focus:text-accent-foreground focus:outline-none`,\n      `disabled:pointer-events-none disabled:opacity-50`,\n      `data-[active]:bg-accent/50`,\n      `data-[state=open]:bg-accent/50`\n    ],\n    triggerIcon: `relative top-px transition duration-200 group-data-[state=open]:rotate-180`,\n    viewport: [\n      `origin-top-center relative w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg`,\n      `h-[var(--radix-navigation-menu-viewport-height)] md:w-[var(--radix-navigation-menu-viewport-width)]`,\n      `data-[state=open]:(animate-in zoom-in-90) data-[state=closed]:(animate-out zoom-out-95)`\n    ],\n    viewportRoot: `perspective-[2000px] absolute top-full left-0 flex w-full justify-center`\n  },\n  variants: {\n    size: {\n      '2xl': {\n        arrow: 'size-4.5',\n        childLink: 'gap-3.5 px-3.5 py-2.5',\n        childLinkDescription: 'mt-2.5',\n        childList: 'gap-3.5 p-3.5',\n        indicator: 'h-4',\n        link: 'gap-3.5 px-3.5 py-2.5',\n        linkIcon: 'size-4.5 -ml-3.5',\n        list: 'gap-2.5 text-xl',\n        trigger: 'gap-3.5 px-3.5 py-2.5',\n        viewport: 'mt-4'\n      },\n      lg: {\n        arrow: 'size-3.5',\n        childLink: 'gap-2.5 px-2.5 py-1.5',\n        childLinkDescription: 'mt-1.75',\n        childList: 'gap-2.5 p-2.5',\n        indicator: 'h-3',\n        link: 'gap-2.5 px-2.5 py-1.5',\n        linkIcon: 'size-3.5 -ml-2.5',\n        list: 'gap-1.75 text-base',\n        trigger: 'gap-2.5 px-2.5 py-1.5',\n        viewport: 'mt-3'\n      },\n      md: {\n        arrow: 'size-3',\n        childLink: 'gap-2 px-2 py-1.5',\n        childLinkDescription: 'mt-1.5',\n        childList: 'gap-2 p-2',\n        indicator: 'h-2.5',\n        link: 'gap-2 px-2 py-1.5',\n        linkIcon: 'size-3 -ml-2',\n        list: 'gap-1.5 text-sm',\n        trigger: 'gap-2 px-2 py-1.5',\n        viewport: 'mt-2.5'\n      },\n      sm: {\n        arrow: 'size-2.5',\n        childLink: 'gap-1.5 px-1.5 py-1',\n        childLinkDescription: 'mt-1.25',\n        childList: 'gap-1.75 p-1.75',\n        indicator: 'h-2',\n        link: 'gap-1.5 px-1.5 py-1',\n        linkIcon: 'size-2.5 -ml-1.5',\n        list: 'gap-1.25 text-xs',\n        trigger: 'gap-1.5 px-1.5 py-1',\n        viewport: 'mt-2'\n      },\n      xl: {\n        arrow: 'size-4',\n        childLink: 'gap-3 px-3 py-2',\n        childLinkDescription: 'mt-2',\n        childList: 'gap-3 p-3',\n        indicator: 'h-3.5',\n        link: 'gap-3 px-3 py-2',\n        linkIcon: 'size-4 -ml-3',\n        list: 'gap-2 text-lg',\n        trigger: 'gap-3 px-3 py-2',\n        viewport: 'mt-3.5'\n      },\n      xs: {\n        arrow: 'size-2.25',\n        childLink: 'gap-1 px-1 py-1',\n        childLinkDescription: 'mt-1.25',\n        childList: 'gap-1.5 p-1.5',\n        indicator: 'h-1.75',\n        link: 'gap-1 px-1 py-1',\n        linkIcon: 'size-2 -ml-1',\n        list: 'gap-1 text-2xs',\n        trigger: 'gap-1 px-1 py-1',\n        viewport: 'mt-1.75'\n      }\n    }\n  }\n});\n\nexport type NavigationMenuSlots = keyof typeof navigationMenuVariants.slots;\n",
      "type": "registry:ui",
      "target": "components/navigation-menu/navigation-menu.ts"
    },
    {
      "path": "src/components/navigation-menu/types.ts",
      "content": "import type {\n  NavigationMenuItemProps as _NavigationMenuItemProps,\n  NavigationMenuLinkProps as _NavigationMenuLinkProps\n} from '@radix-ui/react-navigation-menu';\nimport type { ReactNode } from 'react';\n\nimport type { BaseComponentProps, BaseNodeProps, ClassValue, PropsSlot } from '@/types/other';\n\nimport type { NavigationMenuSlots } from './navigation-menu';\n\nexport interface NavigationMenuItemBaseOption extends BaseNodeProps<_NavigationMenuItemProps>, PropsSlot {\n  description?: ReactNode;\n  label: ReactNode;\n}\n\ntype NavigationMenuChildLinkSlots = Extract<\n  NavigationMenuSlots,\n  'childLink' | 'childLinkContent' | 'childLinkDescription' | 'childLinkIcon' | 'childLinkLabel'\n>;\n\nexport type NavigationMenuChildLinkClassNames = Partial<Record<NavigationMenuChildLinkSlots, ClassValue>>;\n\nexport interface NavigationMenuChildLinkProps\n  extends BaseNodeProps<_NavigationMenuLinkProps>,\n    Pick<NavigationMenuItemBaseOption, 'description' | 'label' | 'leading' | 'trailing'> {\n  classNames?: NavigationMenuChildLinkClassNames;\n}\n\nexport interface NavigationMenuChildListItemProps extends BaseComponentProps<'li'> {}\n\nexport interface NavigationMenuChildListProps extends BaseComponentProps<'ul'> {}\n",
      "type": "registry:ui",
      "target": "components/navigation-menu/types.ts"
    }
  ]
}
