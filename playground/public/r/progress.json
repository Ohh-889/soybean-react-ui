{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "progress",
  "type": "registry:block",
  "title": "Progress",
  "files": [
    {
      "path": "src/components/progress/Progress.tsx",
      "content": "import { Indicator, Root } from '@radix-ui/react-progress';\nimport type { ComponentRef } from 'react';\nimport { forwardRef } from 'react';\n\nimport { cn } from '@/lib/utils';\n\nimport { progressVariants } from './progress-variants';\nimport type { ProgressProps } from './types';\n\nconst Progress = forwardRef<ComponentRef<typeof Root>, ProgressProps>((props, ref) => {\n  const { className, classNames, color, size, value, ...rest } = props;\n\n  const { indicator, root } = progressVariants({ color, size });\n\n  const mergedCls = {\n    indicator: cn(indicator(), classNames?.indicator),\n    root: cn(root(), className, classNames?.root)\n  };\n\n  return (\n    <Root\n      className={mergedCls.root}\n      data-slot=\"progress-root\"\n      ref={ref}\n      value={value}\n      {...rest}\n    >\n      <Indicator\n        className={mergedCls.indicator}\n        data-slot=\"progress-indicator\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </Root>\n  );\n});\n\nProgress.displayName = 'Progress';\n\nexport default Progress;\n",
      "type": "registry:ui",
      "target": "components/progress/Progress.tsx"
    },
    {
      "path": "src/components/progress/index.ts",
      "content": "export { default as Progress } from './Progress';\n\nexport * from './types';\n",
      "type": "registry:ui",
      "target": "components/progress/index.ts"
    },
    {
      "path": "src/components/progress/progress-variants.ts",
      "content": "import { tv } from 'tailwind-variants';\n\nexport const progressVariants = tv({\n  defaultVariants: {\n    color: 'primary',\n    size: 'md'\n  },\n  slots: {\n    indicator: 'flex-1 size-full transition-all duration-200',\n    root: 'relative w-full overflow-hidden rounded-full'\n  },\n  variants: {\n    color: {\n      accent: {\n        indicator: 'bg-accent-foreground',\n        root: 'bg-accent-foreground/20'\n      },\n      carbon: {\n        indicator: 'bg-carbon',\n        root: 'bg-carbon/20'\n      },\n      destructive: {\n        indicator: 'bg-destructive',\n        root: 'bg-destructive/20'\n      },\n      info: {\n        indicator: 'bg-info',\n        root: 'bg-info/20'\n      },\n      primary: {\n        indicator: 'bg-primary',\n        root: 'bg-primary/20'\n      },\n      secondary: {\n        indicator: 'bg-secondary-foreground',\n        root: 'bg-secondary-foreground/20'\n      },\n      success: {\n        indicator: 'bg-success',\n        root: 'bg-success/20'\n      },\n      warning: {\n        indicator: 'bg-warning',\n        root: 'bg-warning/20'\n      }\n    },\n    size: {\n      '2xl': {\n        root: 'h-4'\n      },\n      lg: {\n        root: 'h-3'\n      },\n      md: {\n        root: 'h-2.5'\n      },\n      sm: {\n        root: 'h-2'\n      },\n      xl: {\n        root: 'h-3.5'\n      },\n      xs: {\n        root: 'h-1.75'\n      }\n    }\n  }\n});\n\nexport type ProgressSlots = keyof typeof progressVariants.slots;\n",
      "type": "registry:ui",
      "target": "components/progress/progress-variants.ts"
    },
    {
      "path": "src/components/progress/types.ts",
      "content": "import type { ProgressProps as _ProgressProps } from '@radix-ui/react-progress';\n\nimport type { BaseNodeProps, ClassValue, ThemeColor } from '@/types/other';\n\nimport type { ProgressSlots } from './progress-variants';\n\nexport type ProgressClassNames = Partial<Record<ProgressSlots, ClassValue>>;\n\nexport interface ProgressProps extends BaseNodeProps<Omit<_ProgressProps, 'children'>> {\n  classNames?: ProgressClassNames;\n  color?: ThemeColor;\n}\n",
      "type": "registry:ui",
      "target": "components/progress/types.ts"
    }
  ]
}
