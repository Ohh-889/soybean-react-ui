{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:block",
  "title": "Button",
  "dependencies": ["@radix-ui/react-slot"],
  "registryDependencies": ["https://ui-play.skyroc.me/r/style.json", "https://ui-play.skyroc.me/r/icon.json"],
  "files": [
    {
      "path": "src/components/button/Button.tsx",
      "content": "import { Slot } from '@radix-ui/react-slot';\nimport { Loader2 } from 'lucide-react';\nimport { forwardRef } from 'react';\n\nimport { cn } from '@/lib/utils';\n\nimport { buttonVariants } from './button-variants';\nimport type { ButtonProps } from './types';\n\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>((props, ref) => {\n  const {\n    asChild = false,\n    children,\n    className,\n    color,\n    disabled,\n    fitContent,\n    leading,\n    loading,\n    shadow,\n    shape,\n    size,\n    trailing,\n    variant,\n    ...rest\n  } = props;\n\n  const isDisabled = loading || disabled;\n\n  const Comp = asChild ? Slot : 'button';\n\n  // eslint-disable-next-line sort/object-properties\n  const mergedCls = cn(buttonVariants({ color, fitContent, shadow, size, shape, variant }), className);\n\n  if (asChild) {\n    return (\n      <Comp\n        className={mergedCls}\n        disabled={isDisabled}\n        ref={ref}\n        {...rest}\n      >\n        {children}\n      </Comp>\n    );\n  }\n\n  return (\n    <Comp\n      className={mergedCls}\n      disabled={isDisabled}\n      ref={ref}\n      {...rest}\n    >\n      {loading ? leading || <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : leading}\n      {children}\n      {trailing}\n    </Comp>\n  );\n});\n\nButton.displayName = 'Button';\n\nexport default Button;\n",
      "type": "registry:ui",
      "target": "components/button/Button.tsx"
    },
    {
      "path": "src/components/button/ButtonGroup.tsx",
      "content": "import { forwardRef } from 'react';\n\nimport { cn } from '@/lib/utils';\n\nimport { buttonGroupVariants } from './button-group-variants';\nimport type { ButtonGroupProps } from './types';\n\nconst ButtonGroup = forwardRef<HTMLDivElement, ButtonGroupProps>((props, ref) => {\n  const { children, className, orientation, ...rest } = props;\n\n  const mergedCls = cn(buttonGroupVariants({ orientation }), className);\n\n  return (\n    <div\n      className={mergedCls}\n      {...rest}\n      ref={ref}\n    >\n      {children}\n    </div>\n  );\n});\n\nButtonGroup.displayName = 'ButtonGroup';\n\nexport default ButtonGroup;\n",
      "type": "registry:ui",
      "target": "components/button/ButtonGroup.tsx"
    },
    {
      "path": "src/components/button/ButtonIcon.tsx",
      "content": "import { forwardRef } from 'react';\n\nimport { Icon } from '../icon';\n\nimport Button from './Button';\nimport type { ButtonIconProps } from './types';\n\nconst ButtonIcon = forwardRef<HTMLButtonElement, ButtonIconProps>((props, ref) => {\n  const {\n    children,\n    color = 'accent',\n    fitContent = true,\n    icon,\n    iconProps,\n    shape = 'square',\n    variant = 'ghost',\n    ...rest\n  } = props;\n\n  return (\n    <Button\n      color={color}\n      fitContent={fitContent}\n      ref={ref}\n      shape={shape}\n      variant={variant}\n      {...rest}\n    >\n      {children || (\n        <Icon\n          icon={String(icon)}\n          {...iconProps}\n        />\n      )}\n    </Button>\n  );\n});\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n",
      "type": "registry:ui",
      "target": "components/button/ButtonIcon.tsx"
    },
    {
      "path": "src/components/button/button-group-variants.ts",
      "content": "import { tv } from 'tailwind-variants';\n\nexport const buttonGroupVariants = tv({\n  base: `*:relative focus-visible:*:z-2 *:not-first:not-last:rounded-none`,\n\n  // eslint-disable-next-line sort/object-properties\n  variants: {\n    orientation: {\n      horizontal: `inline-flex *:not-last:border-r-0 *:first:rounded-r-none *:last:rounded-l-none`,\n      vertical: `flex flex-col *:not-last:border-b-0 *:first:rounded-b-none *:last:rounded-t-none`\n    }\n  },\n  defaultVariants: {\n    orientation: 'horizontal'\n  }\n});\n",
      "type": "registry:ui",
      "target": "components/button/button-group-variants.ts"
    },
    {
      "path": "src/components/button/button-variants.ts",
      "content": "/* eslint-disable sort/object-properties */\nimport { tv } from 'tailwind-variants';\nimport type { VariantProps } from 'tailwind-variants';\n\nexport const buttonVariants = tv({\n  base: [\n    'inline-flex items-center justify-center font-medium transition-all-200 cursor-pointer',\n    'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-offset-background',\n    'disabled:cursor-not-allowed disabled:opacity-50'\n  ],\n  compoundVariants: [\n    {\n      color: 'destructive',\n      variant: 'solid',\n      class: `bg-destructive text-destructive-foreground hover:bg-destructive/80 active:bg-destructive-600`\n    },\n    {\n      color: 'success',\n      variant: 'solid',\n      class: `bg-success text-success-foreground hover:bg-success/80 active:bg-success-600`\n    },\n    {\n      color: 'warning',\n      variant: 'solid',\n      class: `bg-warning text-warning-foreground hover:bg-warning/80 active:bg-warning-600`\n    },\n    {\n      color: 'info',\n      variant: 'solid',\n      class: `bg-info text-info-foreground hover:bg-info/80 active:bg-info-600`\n    },\n    {\n      color: 'carbon',\n      variant: 'solid',\n      class: `bg-carbon text-carbon-foreground hover:bg-carbon/80 active:bg-carbon-600`\n    },\n    {\n      color: 'secondary',\n      variant: 'solid',\n      class: `bg-secondary text-secondary-foreground hover:bg-secondary/80 active:bg-secondary-foreground/20`\n    },\n    {\n      color: 'accent',\n      variant: 'solid',\n      class: `bg-accent text-accent-foreground hover:bg-accent/80 active:bg-accent-foreground/20`\n    },\n    {\n      color: 'primary',\n      variant: ['outline', 'dashed', 'soft', 'ghost', 'link'],\n      class: 'text-primary'\n    },\n    {\n      color: 'destructive',\n      variant: ['outline', 'dashed', 'soft', 'ghost', 'link'],\n      class: 'text-destructive'\n    },\n    {\n      color: 'success',\n      variant: ['outline', 'dashed', 'soft', 'ghost', 'link'],\n      class: 'text-success'\n    },\n    {\n      color: 'warning',\n      variant: ['outline', 'dashed', 'soft', 'ghost', 'link'],\n      class: 'text-warning'\n    },\n    {\n      color: 'info',\n      variant: ['outline', 'dashed', 'soft', 'ghost', 'link'],\n      class: 'text-info'\n    },\n    {\n      color: 'carbon',\n      variant: ['outline', 'dashed', 'soft', 'ghost', 'link'],\n      class: 'text-carbon'\n    },\n    {\n      color: 'secondary',\n      variant: ['outline', 'dashed', 'soft', 'ghost', 'link'],\n      class: 'text-secondary-foreground'\n    },\n    {\n      color: 'accent',\n      variant: ['outline', 'dashed', 'soft', 'ghost', 'link'],\n      class: 'text-accent-foreground'\n    },\n    {\n      color: 'primary',\n      variant: ['outline', 'dashed', 'ghost'],\n      class: 'hover:bg-primary/10 active:bg-primary/20'\n    },\n    {\n      color: 'destructive',\n      variant: ['outline', 'dashed', 'ghost'],\n      class: 'hover:bg-destructive/10 active:bg-destructive/20'\n    },\n    {\n      color: 'success',\n      variant: ['outline', 'dashed', 'ghost'],\n      class: 'hover:bg-success/10 active:bg-success/20'\n    },\n    {\n      color: 'warning',\n      variant: ['outline', 'dashed', 'ghost'],\n      class: 'hover:bg-warning/10 active:bg-warning/20'\n    },\n    {\n      color: 'info',\n      variant: ['outline', 'dashed', 'ghost'],\n      class: 'hover:bg-info/10 active:bg-info/20'\n    },\n    {\n      color: 'carbon',\n      variant: ['outline', 'dashed', 'ghost'],\n      class: 'hover:bg-carbon/10 active:bg-carbon/20'\n    },\n    {\n      color: 'secondary',\n      variant: ['outline', 'dashed', 'ghost'],\n      class: 'hover:bg-secondary-foreground/10 active:bg-secondary-foreground/20'\n    },\n    {\n      color: 'accent',\n      variant: ['outline', 'dashed', 'ghost'],\n      class: 'hover:bg-accent-foreground/10 active:bg-accent-foreground/20'\n    },\n    {\n      color: 'primary',\n      variant: 'plain',\n      class: 'hover:border-primary hover:text-primary'\n    },\n    {\n      color: 'destructive',\n      variant: 'plain',\n      class: 'hover:border-destructive hover:text-destructive'\n    },\n    {\n      color: 'success',\n      variant: 'plain',\n      class: 'hover:border-success hover:text-success'\n    },\n    {\n      color: 'warning',\n      variant: 'plain',\n      class: 'hover:border-warning hover:text-warning'\n    },\n    {\n      color: 'info',\n      variant: 'plain',\n      class: 'hover:border-info hover:text-info'\n    },\n    {\n      color: 'carbon',\n      variant: 'plain',\n      class: 'hover:border-carbon hover:text-carbon'\n    },\n    {\n      color: 'secondary',\n      variant: 'plain',\n      class: 'hover:border-secondary-foreground hover:text-secondary-foreground'\n    },\n    {\n      color: 'accent',\n      variant: 'plain',\n      class: 'hover:border-accent-foreground hover:text-accent-foreground'\n    },\n    {\n      color: 'primary',\n      variant: ['outline', 'dashed'],\n      class: 'border-primary'\n    },\n    {\n      color: 'destructive',\n      variant: ['outline', 'dashed'],\n      class: 'border-destructive'\n    },\n    {\n      color: 'success',\n      variant: ['outline', 'dashed'],\n      class: 'border-success'\n    },\n    {\n      color: 'warning',\n      variant: ['outline', 'dashed'],\n      class: 'border-warning'\n    },\n    {\n      color: 'info',\n      variant: ['outline', 'dashed'],\n      class: 'border-info'\n    },\n    {\n      color: 'carbon',\n      variant: ['outline', 'dashed'],\n      class: 'border-carbon'\n    },\n    {\n      color: 'secondary',\n      variant: ['outline', 'dashed'],\n      class: 'border-secondary-foreground'\n    },\n    {\n      color: 'accent',\n      variant: ['outline', 'dashed'],\n      class: 'border-accent-foreground'\n    },\n    {\n      color: 'destructive',\n      variant: 'soft',\n      class: 'bg-destructive/10 hover:bg-destructive/10 active:bg-destructive/20'\n    },\n    {\n      color: 'success',\n      variant: 'soft',\n      class: 'bg-success/10 hover:bg-success/10 active:bg-success/20'\n    },\n    {\n      color: 'warning',\n      variant: 'soft',\n      class: 'bg-warning/10 hover:bg-warning/10 active:bg-warning/20'\n    },\n    {\n      color: 'info',\n      variant: 'soft',\n      class: 'bg-info/10 hover:bg-info/10 active:bg-info/20'\n    },\n    {\n      color: 'carbon',\n      variant: 'soft',\n      class: 'bg-carbon/10 hover:bg-carbon/10 active:bg-carbon/20'\n    },\n    {\n      color: 'secondary',\n      variant: 'soft',\n      class: 'bg-secondary-foreground/10 hover:bg-secondary-foreground/10 active:bg-secondary-foreground/20'\n    },\n    {\n      color: 'accent',\n      variant: 'soft',\n      class: 'bg-accent-foreground/10 hover:bg-accent-foreground/10 active:bg-accent-foreground/20'\n    },\n    {\n      variant: ['ghost', 'link'],\n      shadow: ['sm', 'md', 'lg'],\n      class: 'shadow-none'\n    },\n    {\n      variant: 'plain',\n      shadow: 'sm',\n      class: 'active:shadow-md'\n    },\n    {\n      variant: 'plain',\n      shadow: 'md',\n      class: 'active:shadow-lg'\n    },\n    {\n      variant: 'plain',\n      shadow: 'lg',\n      class: 'active:shadow-xl'\n    },\n    {\n      variant: 'pure',\n      shadow: 'sm',\n      class: 'active:shadow-sm'\n    },\n    {\n      variant: 'pure',\n      shadow: 'md',\n      class: 'active:shadow-md'\n    },\n    {\n      variant: 'pure',\n      shadow: 'lg',\n      class: 'active:shadow-lg'\n    },\n    {\n      size: 'xs',\n      fitContent: true,\n      class: 'p-0.75'\n    },\n    {\n      size: 'sm',\n      fitContent: true,\n      class: 'p-0.875'\n    },\n    {\n      size: 'md',\n      fitContent: true,\n      class: 'p-1'\n    },\n    {\n      size: 'lg',\n      fitContent: true,\n      class: 'p-1.25'\n    },\n    {\n      size: 'xl',\n      fitContent: true,\n      class: 'p-1.5'\n    },\n    {\n      size: '2xl',\n      fitContent: true,\n      class: 'p-1.75'\n    },\n    {\n      size: 'xs',\n      fitContent: false,\n      class: 'h-6 px-1.5'\n    },\n    {\n      size: 'sm',\n      fitContent: false,\n      class: 'h-7 px-2'\n    },\n    {\n      size: 'md',\n      fitContent: false,\n      class: 'h-8 px-4'\n    },\n    {\n      size: 'lg',\n      fitContent: false,\n      class: 'h-9 px-6'\n    },\n    {\n      size: 'xl',\n      fitContent: false,\n      class: 'h-10 px-8'\n    },\n    {\n      size: '2xl',\n      fitContent: false,\n      class: 'h-12 px-10'\n    },\n    {\n      size: 'xs',\n      fitContent: false,\n      shape: ['square', 'circle'],\n      class: 'w-6'\n    },\n    {\n      size: 'sm',\n      fitContent: false,\n      shape: ['square', 'circle'],\n      class: 'w-7'\n    },\n    {\n      size: 'lg',\n      fitContent: false,\n      shape: ['square', 'circle'],\n      class: 'w-9'\n    },\n    {\n      size: 'xl',\n      fitContent: false,\n      shape: ['square', 'circle'],\n      class: 'w-10'\n    },\n    {\n      size: '2xl',\n      fitContent: false,\n      shape: ['square', 'circle'],\n      class: 'w-12'\n    }\n  ],\n  variants: {\n    color: {\n      primary: `focus-visible:ring-primary`,\n      destructive: `focus-visible:ring-destructive`,\n      success: `focus-visible:ring-success`,\n      warning: `focus-visible:ring-warning`,\n      info: `focus-visible:ring-info`,\n      carbon: `focus-visible:ring-carbon`,\n      secondary: `focus-visible:ring-secondary-foreground/20`,\n      accent: `focus-visible:ring-accent-foreground/20`\n    },\n    size: {\n      xs: 'gap-1 text-2xs',\n      sm: 'gap-2 text-xs',\n      md: 'gap-3 text-sm',\n      lg: 'gap-4 text-base',\n      xl: 'gap-5 text-lg',\n      '2xl': 'gap-6 text-xl'\n    },\n    shadow: {\n      none: 'shadow-none',\n      sm: 'shadow-sm',\n      md: 'shadow-md',\n      lg: 'shadow-lg'\n    },\n    fitContent: {\n      true: 'w-fit h-fit',\n      false: ''\n    },\n    variant: {\n      solid: 'bg-primary text-primary-foreground hover:bg-primary/80 active:bg-primary-600',\n      pure: 'border border-border bg-background text-accent-foreground hover:bg-accent/60 active:bg-accent',\n      plain: 'border border-border bg-background text-foreground',\n      outline: 'border bg-background',\n      dashed: 'border border-dashed bg-background',\n      soft: 'bg-primary/10 hover:bg-primary/10 active:bg-primary/20',\n      ghost: 'bg-transparent',\n      link: 'bg-transparent underline-offset-4 hover:underline'\n    },\n    shape: {\n      auto: 'rounded-md',\n      rounded: 'rounded-full',\n      square: 'h-8 w-8 p-0 gap-0 rounded-md',\n      circle: 'h-8 w-8 p-0 gap-0 rounded-full'\n    }\n  },\n\n  defaultVariants: {\n    color: 'primary',\n    variant: 'solid',\n    size: 'md',\n    shape: 'auto',\n    shadow: 'sm',\n    fitContent: false\n  }\n});\n\ntype ButtonVariants = VariantProps<typeof buttonVariants>;\n\nexport type ButtonVariant = NonNullable<ButtonVariants['variant']>;\n\nexport type ButtonShape = NonNullable<ButtonVariants['shape']>;\n\nexport type ButtonShadow = NonNullable<ButtonVariants['shadow']>;\n",
      "type": "registry:ui",
      "target": "components/button/button-variants.ts"
    },
    {
      "path": "src/components/button/index.ts",
      "content": "export { default as Button } from './Button';\n\nexport { default as ButtonGroup } from './ButtonGroup';\n\nexport { default as ButtonIcon } from './ButtonIcon';\n\nexport * from './types';\n",
      "type": "registry:ui",
      "target": "components/button/index.ts"
    },
    {
      "path": "src/components/button/types.ts",
      "content": "import type { BaseNodeProps, PrimitiveProps, ThemeColor, ThemeOrientation } from '@/types/other';\n\nimport type { IconProps } from '../icon';\n\nimport type { ButtonShadow, ButtonShape, ButtonVariant } from './button-variants';\n\nexport interface ButtonProps extends PrimitiveProps, BaseNodeProps<React.ButtonHTMLAttributes<HTMLButtonElement>> {\n  color?: ThemeColor;\n  fitContent?: boolean;\n  leading?: React.ReactNode;\n  loading?: boolean;\n  shadow?: ButtonShadow;\n  shape?: ButtonShape;\n  trailing?: React.ReactNode;\n  variant?: ButtonVariant;\n}\n\nexport interface ButtonGroupProps extends BaseNodeProps<React.HTMLAttributes<HTMLDivElement>> {\n  orientation?: ThemeOrientation;\n}\n\nexport interface ButtonIconProps extends ButtonProps {\n  icon?: IconProps['icon'];\n  iconProps?: Omit<IconProps, 'icon'>;\n}\n\nexport type { ButtonShadow, ButtonShape, ButtonVariant };\n",
      "type": "registry:ui",
      "target": "components/button/types.ts"
    }
  ]
}
